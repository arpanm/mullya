
application {
  config {
    baseName mullya,
    applicationType monolith,
    packageName com.mullya.app,
    authenticationType jwt,
    prodDatabaseType mysql,
    clientFramework react,
    clientPackageManager npm,
    buildTool maven,
    enableSwaggerCodegen true
  }
  entities *
  dto * with mapstruct
  paginate * with infinite-scroll
  service all with serviceImpl
}

entity Actor {
  	email String pattern(/^(.+)@(.+)$/),
  	phone Long min(1000000000) max(9999999999),
  	isEmailVerified Boolean,
  	isPhoneVerified Boolean,
  	isActive Boolean,
  	password String,
  	type ActorType
  	createdOn LocalDate,
  	createdBy String,
  	updatedOn LocalDate,
  	updatedBy String,
}

entity Requirement {
	category StockCategory,
    variant String,
    subVariant String,
    minPrice Float,
    maxPrice Float,
    quantityKg Float,
    neededBy String,
    description String,
    createdOn LocalDate,
    createdBy String,
    updatedOn LocalDate,
    updatedBy String,
    status RequirementStatus
}

enum ActorType {
	Buyer,
    Farmer,
    Agent
}

enum StockCategory {
	Rice,
    Wheat,
    Mustard,
    Other
}

enum RequirementStatus {
	New,
    Accepted,
    Rejected,
    Paid,
    Cancelled,
    Refunded,
    InTransit,
    Delivered
}

relationship OneToMany {
  	Actor to Requirement{actor}
}

entity OTP {
	otp Integer,
    email String,
    phone Integer,
    type OtpType,
    expiryTime LocalDate,
    status OtpStatus,
    createdBy String,
    createdAt LocalDate,
    updatedBy String,
    updatedAt LocalDate
}

entity OTPAttempt {
	otp Integer,
    email String,
    phone Integer,
    ip String,
    coookie String,
    createdBy String,
    createdAt LocalDate
}

enum OtpType {
    Email,
    Phone,
    Both
}

enum OtpStatus {
    Init,
    Verified,
    Expired
}

relationship OneToMany {
	OTP to OTPAttempt{otp}
}

relationship OneToMany {
	Actor to OTP{actor}
}

